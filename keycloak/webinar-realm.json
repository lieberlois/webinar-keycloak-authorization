{
  "id" : "webinar",
  "realm" : "webinar",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "53d8c9ef-cf07-465a-a798-612329e78fee",
      "name" : "default-roles-webinar",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "webinar",
      "attributes" : { }
    }, {
      "id" : "7c0e982a-1c0d-4bd2-a0e1-42e88f81d8b1",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "webinar",
      "attributes" : { }
    }, {
      "id" : "979aef60-b6dc-45c6-8855-90b569d119f7",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "webinar",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "21697e91-7ebc-4caa-9916-44673598a870",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "ee2b4d0a-2606-45c5-ae21-55f4398d28b3",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "08cd70d2-d5a0-4ec9-b006-a70fbe1c4339",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "b60ad83b-3baf-43ae-a428-11d437d4fa80",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "a829a2d1-1b90-494e-986c-d67bac7a60ca",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "f88dcd32-b4e7-45de-9ee3-73b79c3e0add",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "53ee9616-88a3-4067-a837-7afe8208cb7e",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "796198af-5eb8-4ede-b381-f65c3a249380",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "c6542847-bc79-481c-b06f-926ab0d38d17",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "22053bf2-9956-4646-a690-1adce3c8444b",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "6ab0d5f8-a971-48ea-98c2-3a0fe0ab9ab7",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "b5924c04-3206-4db3-b799-0b5d7258ee96",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "f9d58c93-f0cb-44a1-a7bc-60ed03cbcdf3",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "7d8d78ef-5964-4230-965a-acd0dbdb1ed3",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "manage-clients", "query-realms", "manage-events", "view-identity-providers", "manage-users", "query-users", "impersonation", "view-events", "query-groups", "manage-realm", "create-client", "manage-authorization", "view-clients", "view-users", "view-realm", "view-authorization", "query-clients", "manage-identity-providers" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "2b06d88a-bab7-4ef6-8d26-65833d65cdd5",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "8740e096-b40c-4889-a4f9-5710b7d2b313",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "726ff8d8-b3d1-4684-96ca-9ef6cc758b70",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "9440310a-b201-43b0-ab76-2d31281ad2b6",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      }, {
        "id" : "5751e3be-7d54-44f1-af93-02803b8260ab",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c97db58a-468d-4684-ade6-def07f928457",
        "attributes" : { }
      } ],
      "postman" : [ ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "api" : [ {
        "id" : "3ae7ed47-c73f-4b93-9ff0-0bfc3519e6bd",
        "name" : "projectmanager",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "70656780-bac0-4cd1-aca2-542b55aaf11e",
        "attributes" : { }
      }, {
        "id" : "ba9177c1-9b2f-4970-be56-0b3692e7de0e",
        "name" : "sales",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "70656780-bac0-4cd1-aca2-542b55aaf11e",
        "attributes" : { }
      }, {
        "id" : "973c75ea-4464-4a62-a7a2-db9e7143da3d",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "70656780-bac0-4cd1-aca2-542b55aaf11e",
        "attributes" : { }
      } ],
      "broker" : [ {
        "id" : "9310d883-b446-4033-a149-7d11fa3d6489",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ea793a4b-610e-4c51-a504-ce1eeb46af60",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "aa7a148c-3f9e-4732-8c2c-d246c02b5cac",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ecfe67b0-eee2-42a2-ba91-98813af2f2c9",
        "attributes" : { }
      }, {
        "id" : "b2f88f4a-8b4e-45c9-8693-a1490528e05a",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ecfe67b0-eee2-42a2-ba91-98813af2f2c9",
        "attributes" : { }
      }, {
        "id" : "7b35474c-795e-4d87-b971-c22fa3915cfd",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "ecfe67b0-eee2-42a2-ba91-98813af2f2c9",
        "attributes" : { }
      }, {
        "id" : "2510d150-967d-442a-bee3-e2fdc5b6f48c",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ecfe67b0-eee2-42a2-ba91-98813af2f2c9",
        "attributes" : { }
      }, {
        "id" : "ae8890d3-a2e7-4d5c-85e8-20f1abcb7521",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "ecfe67b0-eee2-42a2-ba91-98813af2f2c9",
        "attributes" : { }
      }, {
        "id" : "2783f9f7-b937-4a17-8bf5-ae8cdc941443",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ecfe67b0-eee2-42a2-ba91-98813af2f2c9",
        "attributes" : { }
      }, {
        "id" : "64349707-0d5f-4cee-a483-5fac614ffe10",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ecfe67b0-eee2-42a2-ba91-98813af2f2c9",
        "attributes" : { }
      } ],
      "frontend" : [ ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "53d8c9ef-cf07-465a-a798-612329e78fee",
    "name" : "default-roles-webinar",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "webinar"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "users" : [ {
    "id" : "59ae4499-9e18-4680-b85d-a14868f3f529",
    "createdTimestamp" : 1633463409826,
    "username" : "alice",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "credentials" : [ {
      "id" : "89176b20-bf52-4bfa-92e3-5eda9134d882",
      "type" : "password",
      "createdDate" : 1633463416792,
      "secretData" : "{\"value\":\"E+1wkUtDGZmlqTEq4IAPsSmr7LxXwtDyTBbO/l9vOBMNo8AEqPT6+XXRTurVtrTDr0gNWLF6oG+E6coTsfh8Mg==\",\"salt\":\"pvHZ4XeFGOcfA01EhuMxNQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-webinar" ],
    "clientRoles" : {
      "api" : [ "sales" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "e793372c-d81d-4d5c-ae75-64ccd7cfed20",
    "createdTimestamp" : 1633463432868,
    "username" : "bob",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "credentials" : [ {
      "id" : "a8ea316f-58a9-432b-a5ca-3d5a61ad744c",
      "type" : "password",
      "createdDate" : 1633463442409,
      "secretData" : "{\"value\":\"XbTFoYPsn5b6JZNqmzkC9/w9nHtc3J4xxncTOx5DI2HrYntFFYNm1j+NOR5Jtpa5Roleoe3YE+l/kwP3dn4G9A==\",\"salt\":\"kQQp2DEyzgO5uPS5CV28nA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-webinar" ],
    "clientRoles" : {
      "api" : [ "projectmanager" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "d4162775-1f2a-4622-b472-267f1df20690",
    "createdTimestamp" : 1633018357010,
    "username" : "service-account-api",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "api",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-webinar" ],
    "clientRoles" : {
      "api" : [ "uma_protection" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ {
    "id" : "ecfe67b0-eee2-42a2-ba91-98813af2f2c9",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/webinar/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/webinar/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "20445f27-8a0c-4473-8daa-e04282ce279e",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/webinar/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/webinar/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "c494962d-8aef-4f4e-b833-7241e4083ed1",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "d61ca779-3efa-4599-9218-7030f621333a",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "70656780-bac0-4cd1-aca2-542b55aaf11e",
    "clientId" : "api",
    "rootUrl" : "https://localhost:5001",
    "adminUrl" : "https://localhost:5001",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "21199147-846d-44b7-bc3e-1f5145877514",
    "redirectUris" : [ "https://localhost:5001/*" ],
    "webOrigins" : [ "https://localhost:5001" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "46d3448b-13bd-4320-a586-5a9579cddd7a",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9f403e38-7822-497c-88d5-861c6c741890",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d5e616e5-5f7c-4147-94c9-36f9159ca225",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "customers",
        "type" : "urn:api:resource:customer",
        "ownerManagedAccess" : false,
        "displayName" : "All customers",
        "attributes" : { },
        "_id" : "deb61104-5008-4001-8792-ac5734b1235b",
        "uris" : [ "/customer/*" ],
        "scopes" : [ {
          "name" : "read"
        }, {
          "name" : "update"
        }, {
          "name" : "delete"
        }, {
          "name" : "create"
        } ],
        "icon_uri" : ""
      }, {
        "name" : "projects",
        "type" : "urn:api:resource:project",
        "ownerManagedAccess" : false,
        "displayName" : "All Projects",
        "attributes" : { },
        "_id" : "cca3a1af-b8c5-478f-acee-01044961db50",
        "uris" : [ "/projects/*" ],
        "scopes" : [ {
          "name" : "read"
        }, {
          "name" : "delete"
        }, {
          "name" : "create"
        } ],
        "icon_uri" : ""
      } ],
      "policies" : [ {
        "id" : "345b2a8b-1cb0-41c8-9734-f82fa5bf1b1f",
        "name" : "All sales persons",
        "type" : "role",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "roles" : "[{\"id\":\"api/sales\",\"required\":true}]"
        }
      }, {
        "id" : "888e0187-97cc-4c8a-8256-dc71486df3e7",
        "name" : "All project manager",
        "type" : "role",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "roles" : "[{\"id\":\"api/projectmanager\",\"required\":true}]"
        }
      }, {
        "id" : "7a1a3869-23b3-4498-a0c2-da47fd97b78d",
        "name" : "Is lead of project",
        "type" : "js",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "code" : "var resource = $evaluation.getPermission().getResource();\nif (resource.type == \"urn:api:resource:project\") {\n    var identity = $evaluation.context.getIdentity();\n    var username = identity\n        .getAttributes()\n        .getValue(\"preferred_username\")\n        .asString(0);\n\n    var projectlead = resource\n        .getAttribute(\"projectlead\");\n    print(\"Projectlead \" + projectlead);\n    if (projectlead && projectlead[0] == username) {\n        $evaluation.grant();\n    }\n}\n\n"
        }
      }, {
        "id" : "38878e13-6030-475d-9ca1-fb784e3d10b5",
        "name" : "Project Manager can read customers",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"customers\"]",
          "scopes" : "[\"read\"]",
          "applyPolicies" : "[\"All project manager\"]"
        }
      }, {
        "id" : "eab3e9ab-fe57-40ca-afac-72a91b1fe8d5",
        "name" : "Sales can access customers",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"customers\"]",
          "scopes" : "[\"delete\",\"create\",\"update\",\"read\"]",
          "applyPolicies" : "[\"All sales persons\"]"
        }
      }, {
        "id" : "00de4f14-96a9-4157-bc7d-ba2646e3537c",
        "name" : "Project Manager can access project",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"projects\"]",
          "scopes" : "[\"delete\",\"read\"]",
          "applyPolicies" : "[\"All project manager\"]"
        }
      }, {
        "id" : "b2da6761-778d-4577-b558-a41e5792e196",
        "name" : "Sales can create & read projects",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"projects\"]",
          "scopes" : "[\"create\",\"read\"]",
          "applyPolicies" : "[\"All sales persons\"]"
        }
      }, {
        "id" : "086293c7-9eac-41cb-a7cb-65641f2ee8b1",
        "name" : "Project Lead can archive resource",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "scopes" : "[\"archive\"]",
          "applyPolicies" : "[\"Is lead of project\"]"
        }
      } ],
      "scopes" : [ {
        "id" : "cad9d225-7e29-413a-8257-07c3064037ae",
        "name" : "archive"
      }, {
        "id" : "0e5bc904-408e-435c-ae3f-43345672bc3d",
        "name" : "create",
        "displayName" : "Create"
      }, {
        "id" : "11c8e22a-2747-4bb6-b98b-17e79f463adf",
        "name" : "read",
        "displayName" : "Read"
      }, {
        "id" : "4c5b03ab-ffc4-42d9-9001-46a72f43d254",
        "name" : "update",
        "displayName" : "Update"
      }, {
        "id" : "58122624-ae4d-4dde-964c-bf2ba0f735d5",
        "name" : "delete",
        "displayName" : "Delete"
      } ],
      "decisionStrategy" : "AFFIRMATIVE"
    }
  }, {
    "id" : "ea793a4b-610e-4c51-a504-ce1eeb46af60",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "081d56cf-d997-4809-b9c0-1a69a7789414",
    "clientId" : "frontend",
    "rootUrl" : "http://localhost:4200",
    "adminUrl" : "",
    "baseUrl" : "http://localhost:4200",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:4200/*" ],
    "webOrigins" : [ "http://localhost:4200" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "7e0477df-7414-4d2d-a471-5f2d3dacdc50",
    "clientId" : "postman",
    "rootUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "app://postman/callback" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "access.token.lifespan" : "3600",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "false",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "c97db58a-468d-4684-ade6-def07f928457",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a3a9ca14-f66c-4e25-9ba3-ae20975bad94",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/webinar/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/webinar/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "95dcee2d-8b95-46dd-86f9-d9d2c106662d",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "01aaf227-f694-4fbe-b307-6b28298543b4",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "14efbce6-d3e2-4385-a979-753eecf34f05",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "244fe990-691a-436b-8c42-256060197bf4",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "4004b08d-b444-416b-bbf6-7461715d7f1b",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "abf3c98e-4df3-425c-870a-8c4aac80fdbd",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "ceb52d7b-cab4-40ad-a2b9-d1e137a54c35",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "09d88d1a-c9aa-4927-85e2-860c6307bfe1",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2df1265d-9db4-4289-bf8b-ecc82a7e4914",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "1dcddaca-306e-4b1e-a981-1f5de396948c",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "eec44ae4-5341-49d9-b09b-42041af160ea",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "1c9c08ee-4fc6-4e47-b7e1-550092e67a55",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "70840704-529b-48eb-b12b-d1c40717ee60",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f2578d8b-6a4b-4816-988a-23a1bb178570",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7f2f3699-8c19-4ea6-8a31-f1dfb6f2cf6b",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "481910a7-18b4-4c74-a2af-c3ee7601d477",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a79342f4-63e7-40f6-b8eb-8aaaa4c9ab42",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3cfe098f-b28d-491f-a5ce-eb8e71140a82",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "850c8dc1-e681-4ceb-b8ec-f1e7ade1899b",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3f59a309-3f05-4935-90bd-c8626fa2b7a2",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a31e7c17-91d2-4189-a594-80fb9dd3e475",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "05725575-44e7-44fb-a317-dcdd0b167620",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5a8e6946-443e-4658-9f57-b01fc720d8fc",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e5248081-3b3c-4bfb-a713-ffd52283c5b3",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "fa6d8726-0d1a-4097-b7f1-0ab970a5725e",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9eb23cc5-9b11-48e6-ada5-4732390663cb",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "164473de-c190-47b6-ad72-db8a90c6a9ab",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "f986c27b-78b2-4b9b-8a10-dd349d47cce1",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "7bab18dc-78d8-4af7-ac34-2d711ce3a66d",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "ab579f0f-1dac-42aa-9970-8ea5fae8d314",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "cebca4d7-e30b-487d-baed-d7e4ac83f946",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "88ff8912-c075-49d4-8269-829b60fb91a3",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "81ca176e-a967-4e08-a246-d7f76d50f052",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "40d51652-5223-46ff-9e3f-172a97d638a5",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "80d44613-f54a-4638-92e0-e0ab1cd5dcd9",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "378d7590-b4e2-48ef-96c0-0ad597ae350b",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  } ],
  "defaultDefaultClientScopes" : [ "web-origins", "profile", "role_list", "email", "roles" ],
  "defaultOptionalClientScopes" : [ "address", "offline_access", "microprofile-jwt", "phone" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ "SEND_RESET_PASSWORD", "UPDATE_CONSENT_ERROR", "GRANT_CONSENT", "VERIFY_PROFILE_ERROR", "REMOVE_TOTP", "REVOKE_GRANT", "UPDATE_TOTP", "LOGIN_ERROR", "CLIENT_LOGIN", "RESET_PASSWORD_ERROR", "IMPERSONATE_ERROR", "CODE_TO_TOKEN_ERROR", "CUSTOM_REQUIRED_ACTION", "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR", "RESTART_AUTHENTICATION", "IMPERSONATE", "UPDATE_PROFILE_ERROR", "LOGIN", "OAUTH2_DEVICE_VERIFY_USER_CODE", "UPDATE_PASSWORD_ERROR", "CLIENT_INITIATED_ACCOUNT_LINKING", "TOKEN_EXCHANGE", "AUTHREQID_TO_TOKEN", "LOGOUT", "REGISTER", "DELETE_ACCOUNT_ERROR", "CLIENT_REGISTER", "IDENTITY_PROVIDER_LINK_ACCOUNT", "DELETE_ACCOUNT", "UPDATE_PASSWORD", "CLIENT_DELETE", "FEDERATED_IDENTITY_LINK_ERROR", "IDENTITY_PROVIDER_FIRST_LOGIN", "CLIENT_DELETE_ERROR", "VERIFY_EMAIL", "CLIENT_LOGIN_ERROR", "RESTART_AUTHENTICATION_ERROR", "EXECUTE_ACTIONS", "REMOVE_FEDERATED_IDENTITY_ERROR", "TOKEN_EXCHANGE_ERROR", "PERMISSION_TOKEN", "SEND_IDENTITY_PROVIDER_LINK_ERROR", "EXECUTE_ACTION_TOKEN_ERROR", "SEND_VERIFY_EMAIL", "OAUTH2_DEVICE_AUTH", "EXECUTE_ACTIONS_ERROR", "REMOVE_FEDERATED_IDENTITY", "OAUTH2_DEVICE_CODE_TO_TOKEN", "IDENTITY_PROVIDER_POST_LOGIN", "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR", "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR", "UPDATE_EMAIL", "REGISTER_ERROR", "REVOKE_GRANT_ERROR", "EXECUTE_ACTION_TOKEN", "LOGOUT_ERROR", "UPDATE_EMAIL_ERROR", "CLIENT_UPDATE_ERROR", "AUTHREQID_TO_TOKEN_ERROR", "UPDATE_PROFILE", "CLIENT_REGISTER_ERROR", "FEDERATED_IDENTITY_LINK", "SEND_IDENTITY_PROVIDER_LINK", "SEND_VERIFY_EMAIL_ERROR", "RESET_PASSWORD", "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR", "OAUTH2_DEVICE_AUTH_ERROR", "UPDATE_CONSENT", "REMOVE_TOTP_ERROR", "VERIFY_EMAIL_ERROR", "SEND_RESET_PASSWORD_ERROR", "CLIENT_UPDATE", "CUSTOM_REQUIRED_ACTION_ERROR", "IDENTITY_PROVIDER_POST_LOGIN_ERROR", "UPDATE_TOTP_ERROR", "CODE_TO_TOKEN", "VERIFY_PROFILE", "GRANT_CONSENT_ERROR", "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR" ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "6fa51ef3-da74-41ce-8440-d9b514f3d98a",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "cc2fc7d5-5db2-45a1-8fc1-663fb708df08",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "70ff537a-fb58-40fb-862d-c3652fddccc2",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "503722b7-1f3a-4965-a82e-0d1c5fcbe2ea",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "5b7ec2af-21a4-4300-b2a5-380b7f03cc53",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "cec0db09-7a1f-4cc8-802c-a545c642f31e",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-role-list-mapper", "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-property-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "oidc-address-mapper" ]
      }
    }, {
      "id" : "5ec33299-a4e2-422e-b1b2-dce377e7fdb1",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "96218788-57ba-41f2-b5e8-b43dab90136e",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-address-mapper", "oidc-full-name-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "e4d5fc35-24f1-45eb-9e98-c61fbecb33a4",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEAnWZaP7MysxPEnwcay71jLyw9LwcvWnSsAv2bsbZpS+dsoOwvw2+Uhsr5b9a5vEmJgmOvChOFrXxD9D0JhYrPKomaKJ6R3Crk8l6hZc3XIUBVcU7Ps0BSM2e2V15a1URCPzgCYiVqWgUOOCpKJF/2jDmeYuI+6Tw8zt1/O6meuD+LgsBz4X5V0PMXa4oJ1lc8H1/555QMoX4TMU9V2W6+9Qsn27PzXHC+aSZ742n3OmHBL82Rhly4C6lqL+/5GZqYhYSYRR67rL/JjGV465kp9qgBZyG4DCYZTON37vjDFvtV7oHPelhhSzpJ2HdvyU94+LxyFG8rvBPNaO0ubGyBqwIDAQABAoIBADRIUEgCdR/IvDH6wSrV4MFFl5kscM1CHfTsWrAgID/HQmz9pyvqv1I6z7oXgCCL6LI3/GeDbo7ezQ+uyp/iKMg/ZsaBTX/te5kKV+AiDIiN/xOhExq+jc9nbsj8nX1jrAGl0BzbwsTeEwgS/AezHIkdhn/gGPeOO8CXEHE3+XHHmbCW4CqjPwBM3qQBBjPJ4Mlc/07L2ecgF4cCkSYA8Qcj5mD3a4J7VKumV6z3/gl4QSKbePFO0gCrwNRpX6mvfUppGpdJq4iX6LVdDNyoUCL5mfZgQ0oTb5AXIF00fxoPdfMDyUWGaCwOdk4WczD0oH/KgidB+KY8cOU3O9ldmdECgYEA9a2V8vuXnfkP70k5Bm38RfTe2bld0elBpdyZ73BaIHhMCMNVMVLgAk/uw6bJBL6dhbhdi81Q7vE5IcSU/T06vdDKvWtNCQLdnFHv32XT49VFbaisVgMSG17uHC1m/Rc5N7BkDHO1eyvqlqa3otaavcZkdJjLCPjcmorw6pYckXMCgYEApANIDxGJg414+lS5G+fUwGKsBIkaDmut9e6YxlQrpP1RWVfgK18VtphaaEouELNpIik3OkS1bexm1XcH0T4SytfWFBfZZxd95Z6V47sHY+QklHktu/J9nH44Vk6zcDFUxmcdOrC/CDJm39cJY/COWoCX9uBu7HEAYnCSAJZbYOkCgYACSlsCh+vy8hZ+8ZzRfYcDk/Pb7cl9IoKVLEhXHiII+XYkAsYxjoc+Hkaolk57d9d6Hqzol8JwZ9lTgkStU7vPdzncqDpwohE02uK0n3tpPVzHV/I7Xw31KV5o7tdt9qB273MPVqjTfCZUvzspDn0k1cur9py1+bP80NzMIxgjFwKBgGL2d+xfsJHoMy8ZH/hukjjjUNgLweUho/3Y0eYZs5wCHavDEkgZP4jFtQdoexMori8mn2RRQQfqtMHo6Jag1cX/JfVJzqwdyKFcZyTaHUNwzYGo/KeDUbezkVrCchMoMPbmEQTw0NOpVdmKbugWpk6FeSxFj6irJog/VFl2X/zBAoGAFZGtOuseLJzJvKESuraTpIjov8hKfoJJP7Ibs/hNSH4K1Q4etzdKCKgTxfClG3/ZdRUVZwLAXFqaBvqVclDPzEUGf+o2NajMJ3EcfCDzaaIvPCd6Eg4uTaynWL6es3zFmN/RDnM2gVrRHXLy6aVHCP8TfLOMqgmJxtGrHojJrP0=" ],
        "keyUse" : [ "sig" ],
        "certificate" : [ "MIICnTCCAYUCBgF8Ufk7IDANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAd3ZWJpbmFyMB4XDTIxMTAwNTE5MzkyMFoXDTMxMTAwNTE5NDEwMFowEjEQMA4GA1UEAwwHd2ViaW5hcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ1mWj+zMrMTxJ8HGsu9Yy8sPS8HL1p0rAL9m7G2aUvnbKDsL8NvlIbK+W/WubxJiYJjrwoTha18Q/Q9CYWKzyqJmiiekdwq5PJeoWXN1yFAVXFOz7NAUjNntldeWtVEQj84AmIlaloFDjgqSiRf9ow5nmLiPuk8PM7dfzupnrg/i4LAc+F+VdDzF2uKCdZXPB9f+eeUDKF+EzFPVdluvvULJ9uz81xwvmkme+Np9zphwS/NkYZcuAupai/v+RmamIWEmEUeu6y/yYxleOuZKfaoAWchuAwmGUzjd+74wxb7Ve6Bz3pYYUs6Sdh3b8lPePi8chRvK7wTzWjtLmxsgasCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEALkk75LfGKzxGPElDKgbFruHgzXDXlVOXaDl7kj4QERLlL0XZevb7i/bZCefuRkOI5/RyGwbEp6pWIAtwtZBIP5++ihUhdKoVkKW2O8ZDcvbhd2T+vhsmM3Bso1EMSkybBt0ECU/Gj/SDxmcP57ru8AEN58jkEWgT5HWEOaGCh4NA0Cdvws1mXGNQDoVxelz0E3qyKdl/q0gFLSXDzGehmKv1nntrWIVix67zFD67dk6T2Y8wYhuDTBOw1jGOGqqL19924AWLuS4fnEgSrVtBZoOkKiHhBB8fiuKht2PnsBAq0ym0xSSMHcqARgVFH1VVA7YOefYnr7WvDuOfWvKNDw==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "b624ff3e-c62e-42cb-a3cb-0220300b405b",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "0756d8b8-40ba-4d10-ba73-e5caeb04b728" ],
        "secret" : [ "NEfU9lf_ksiOW3Fi07GRGciNDYvtgeRKOzSs8NYDr3OFMqBAALr11BIs9ICSsLlX1P5mLW1IG8OC9XLtOp9QJg" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "40d783d0-6ce6-4b2d-984a-d74e0e8db67c",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpQIBAAKCAQEAowW3HkBzdMy1NxG4R1z3K+ISIEhlt29l7HadXc3OUs9sNtQmhbz8bM080TZTeW3z2bAmKPfKNrLP4gil2rplrqTz/tVBcYNOeNNvHOM4WokHPSOMAzE8tYjcuQafttXgB/WNEFme6dDcLWpvAFqG+AtgWUXsULYhdX4yj7SX/TnFwdx4noMjzdPiTK5YrNz8HRdRXBT9VmBV1YGGuzNcm1L8SCKcX+wrwP9vMsoB1Xrvv6rDbD3n53WHfKr1BZkV2R5Edt41aWkTnxtVTVIkk3MkcuP6z76BpBb6FRaX8jIC6mLFEIsMHRXKjem5IAtTAtOOu1t5piH4wofRSWRdwQIDAQABAoIBAQCJQ7CySjZs7EjRe5wcioycaJg2kn8C+0to1V8fssC9PWWyrONazIwG2LESv5l9rzUZ4JXg/PNJJzqe6gUsrLIdYUsJEWsvNw6F8hGm0zOKF8L+mcW0kmq5t+mR6Z/lhSRDz1/dmniSC4i4vNuGArOOe5W+1X9rXk/B7GaKVdd8IR+Cma8QgvFvx321dfha/5WB88QSVoaPQ+illQvYaAXtDq/7n02ejYkJQ9KGzhsdAqx4kXUGn3E/e7A2+qftECBfqFKM9EyvoiuJHycbwvGNTBJfUl2G2167oa8Iy1u7VvxLaGdmzrTSLU39UkUh9JQ6reVjvd4x38/cXok/89WhAoGBAPuCzBHSg3NDktfXh63RAhDZmq+PO9ZBgoPslPDifwxhz5fmAgAJv5uCwDmbtQb7D34k7t54meAu2Xlr8hP6um/U+ACjE7cTU7F1/xmsX7C4gHhzCjcjcir6QsgJZ5Q6C5fPRdFeN7AEOGBk0wbS4nau5/t62wuC3DZBL8X8qAadAoGBAKXumKpe1qkrbxUkVBhivEBnfYgsPJEBKpI5sabUF/YzYvy25eaLu5w6JFJQKg+OsMPXoNvnqQEEkUGc6iJC9RO00Oce+qZmkTd2+KiUoAkr1rL2BXrswEFdZp+5JoupvMa/KTk2w8wHCmCCETOane87OHcCnkdytspTeqBfkzh1AoGBAKaZHjnT+tSX9yXYE3yUTM0Chw8xTo5+uEhQptvk/AkkpRDV/48s5enJszC1rjTgioOhTUS6GBtCjTV7xk9rrqEzLc+mNgH34GFVatQDtSLnI9olQagCZ7aGLUQ5zo2F4XX+ix3DThnewcVAI/SKLg41j16qI3w9g0bA6Tc5Q8eVAoGACvSY4c7HL34tpGC0qLOEKGBs2lvJV+2SyPrELvab6mZ0J6lPvowFRAhWs5SVYleSdiu7dCl0cBvEF2fr0X1IPxfWHxxdgjUNa3MQcdj2RAS/9SrnK7mL7ATlrLAFynzXeOvQJfXmsYbZeYu85QJVYSEw1jK3DpKVXQBr/UCyMK0CgYEAgaLvTOa6M35K9eafcCFEd2ABNeRdKdoOCWn1es+LdKPPXzVDwmeE3KA7bs0TGrY5+G3QtEAS3DlzToQSlkjHvsvBEEWj5BmyGOlYSh9TDWhI+NBp/+7v2liUiqMjCRVOnwy1nKqhqRYTnTmX0PQLnaZpHbOfQ+bFbflvdX/QcrQ=" ],
        "keyUse" : [ "enc" ],
        "certificate" : [ "MIICnTCCAYUCBgF8Ufk7hDANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAd3ZWJpbmFyMB4XDTIxMTAwNTE5MzkyMFoXDTMxMTAwNTE5NDEwMFowEjEQMA4GA1UEAwwHd2ViaW5hcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKMFtx5Ac3TMtTcRuEdc9yviEiBIZbdvZex2nV3NzlLPbDbUJoW8/GzNPNE2U3lt89mwJij3yjayz+IIpdq6Za6k8/7VQXGDTnjTbxzjOFqJBz0jjAMxPLWI3LkGn7bV4Af1jRBZnunQ3C1qbwBahvgLYFlF7FC2IXV+Mo+0l/05xcHceJ6DI83T4kyuWKzc/B0XUVwU/VZgVdWBhrszXJtS/EginF/sK8D/bzLKAdV677+qw2w95+d1h3yq9QWZFdkeRHbeNWlpE58bVU1SJJNzJHLj+s++gaQW+hUWl/IyAupixRCLDB0Vyo3puSALUwLTjrtbeaYh+MKH0UlkXcECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAK4mZwnZywzJEH59fmOhbsu2Gdu3wuszmyueDxVE0AnbI9SpyWCYM/Srh0UdiKMrIFlsyT7vPK8hSu1AF6E/lLLrxYOj9d7IB9+Xmdu+rIR6uENBgPQNYJuHUQSZpk13VGtTq5RI0+RPBWgXnKbm9OuB47fh4m1P2EhLJQfnggdVHa43L7mne/j0wS3kXTbqmk3jqqeo8x2oFHOsA63ThZlYUStgXAWKZORpr8HYlRJxQzBtcnP3oYcB+Fcr/4FCTtM24HUjZoITWz1jWG7dZ4MDDkgm+hokb3EOUa1CGBANeP6js9exnX2sK21fr946KL2kuoA8vmKAt9dNz2U3hsQ==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "14034703-639e-4610-a5f1-d3e681c88c92",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "3d09b347-e1e3-4f01-ba2b-a799fa617b8c" ],
        "secret" : [ "Bi5pdkwGPh3dRlmogrJSKQ" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "2f977401-bb65-432b-97d8-799710b98bbc",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "15789c4a-4b86-44ac-9a73-1a3597220965",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "4ac32bd3-72ba-4e4a-b432-07e005c7ce31",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "3e631018-e31e-4720-afcb-814bd17781f2",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "9663698b-82a7-4570-aadc-1cf90d36f3c4",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "a2782091-55b0-4bd1-aca4-3cfbb1087407",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "6dee04bc-5b07-423c-b47d-831718f2a938",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "fe485802-ca4f-4e65-acb7-d28feebce0a9",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "adb7d9b6-2461-4035-97c0-49508fcd3fbb",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "4dda52db-bcd5-42e2-a8d2-b3ef8ca568fa",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "flowAlias" : "forms",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "158e9a0b-85b4-4fe0-ac7c-ab642f768dff",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "ffac7788-ce80-4f2a-bc0b-1b5cb085bc06",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "257a41ab-3cbc-48b2-acb4-434cd374e709",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "fcf454b0-60ae-4648-94b8-73346f649b0c",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "b69d0285-fdcb-460d-bbe3-b3c4b6203256",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "5b1edab0-66b4-4ddd-9bde-a13b2dbb6852",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "599603d7-71aa-4a2c-a273-893410c44bc1",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "1ce1ae26-b794-4c31-bfce-981035c18716",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "ac58bf29-9da3-42bf-a5de-8b0947d24cef",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "4af99ed2-67f6-4622-bd03-49604e64723c",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "cc1a0485-742d-44b9-8865-e9be7991a763",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "18dc6695-4e98-48ae-8f6d-5b30e25a450a",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "clientSessionMaxLifespan" : "0",
    "parRequestUriLifespan" : "60",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "15.0.2",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}